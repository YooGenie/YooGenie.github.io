<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>개발자 on 괴발개발 성장기🐾</title>
    <link>https://YooGenie.github.io/tags/%EA%B0%9C%EB%B0%9C%EC%9E%90/</link>
    <description>Recent content in 개발자 on 괴발개발 성장기🐾</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Wed, 02 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://YooGenie.github.io/tags/%EA%B0%9C%EB%B0%9C%EC%9E%90/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[MySQL] 컬럼 추가 및 컬럼 순서 지정하기</title>
      <link>https://YooGenie.github.io/post/mysql/20221102/</link>
      <pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20221102/</guid>
      <description># 배경 type이라는 컬럼을 추가 하고 싶었다. 그리고 맨 뒤가 아니라 A 컬럼 옆에 넣고 싶었다.
# 문법 원하는 컬럼명 옆에 놓고 싶을 때 ALTER TABLE [테이블명] ADD [추가할 컬럼명] [자료형] AFTER [앞컬럼명]; 컬럼 맨 앞에 추가 하고 싶을 때 ALTER TABLE [테이블명] ADD [추가할 컬럼명] [자료형] FIRST; # 예시 ALTER TABLE goods ADD type varchar(10) AFTER A; A 컬럼 뒤에 varchar타입인 type 컬럼을 추가했다 ​ ​ ​</description>
    </item>
    
    <item>
      <title>[MySQL] 컬럼 타입 변경하는 방법</title>
      <link>https://YooGenie.github.io/post/mysql/20221124/</link>
      <pubDate>Wed, 02 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20221124/</guid>
      <description># 배경 id를 한개만 저장해서 int를 사용했다. 하지만 id를 여러개 받아서 저장하는 걸로 비즈니스 로직이 변경되었다. 그래서 int를 text로 변경하는 상황이다.
# 컬럼 타입 변경하는 방법 ALTER TABLE 테이블명 MODIFY 컬럼명 타입; # 예시 ALTER TABLE banners MODIFY id TEXT; 타입에는 varchar , int, bool 등등 사용할 수 있다 ​ ​ ​</description>
    </item>
    
    <item>
      <title>[MySQL] 컬럼명 변경하기</title>
      <link>https://YooGenie.github.io/post/mysql/20221101/</link>
      <pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20221101/</guid>
      <description># 배경 비즈니스 로직이 변경되면서 name를 ref_name으로 변경해야 했다.
# 문법 ALTER TABLE [테이블명] RENAME COLUMN [변경 전 컬럼명] TO [변경후 컬럼명] # 예시 ALTER TABLE goods RENAME COLUMN name TO ref_name; ​ ​ ​</description>
    </item>
    
    <item>
      <title>[MySQL] 버전 확인 방법</title>
      <link>https://YooGenie.github.io/post/mysql/20221006/</link>
      <pubDate>Thu, 06 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20221006/</guid>
      <description># 배경 맥북에 mysql를 설치하기 위해서 버전을 확인 하고 싶었다.
# 방법 SELECT VERSION(); #결과 8.0.22
# 잡담 굳이 같은 버전을 받은 이유... 잘 쓰고 있던 버전이라서... 회사에서 사용하는 건데 버전 문제가 생길까... 무서워서 ​ ​ ​</description>
    </item>
    
    <item>
      <title>[MySQL] 타임존을 Asia/Seoul으로 설정하는 방법</title>
      <link>https://YooGenie.github.io/post/mysql/20221001/</link>
      <pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20221001/</guid>
      <description># 배경 시스템을 서울로 설정하고 싶었다.
# 설정 방법 SET GLOBAL time_zone=&amp;#39;Asia/Seoul&amp;#39;; SET time_zone=&amp;#39;Asia/Seoul&amp;#39;; # 확인하는 방법 SELECT @@global.time_zone, @@session.time_zone; #결과 이렇게 변경이 되었다. 만약에 잘되지 않는 다면 아래 링크 참조하기 참조 링크 ​ ​ ​</description>
    </item>
    
    <item>
      <title>[MySQL] 타임존 설정코드가 안될 때</title>
      <link>https://YooGenie.github.io/post/mysql/20220930/</link>
      <pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20220930/</guid>
      <description># 배경 타임존 설정 코드를 쳤다.
SET GLOBAL time_zone=&amp;#39;Asia/Seoul&amp;#39;; 그런데 아래와 같은 에러 메시지가 나온다.
ERROR 1298 (HY000): Unknown or incorrect time zone: &amp;#39;Asia/Seoul&amp;#39; # 해결방안 아래 사이트에 접속한다. 다운로드 받는 사이트 MySQL5.7 이상이어서 그림에 표시 된 걸 다운 받았다. 그리고 압축을 풀었다. 코드를 작성한다.
use mysql source [파일이 있는 절대경로] ex) source C:\Users\bsit\Downloads\timezone_leaps.sql 잘 적용됐는지 테스트 한다. 아래 쿼리를 작성하면 그림과 같은 결과 같이 나온다. SELECT b.name, a.time_zone_id FROM mysql.</description>
    </item>
    
    <item>
      <title>[MySQL] 타임존 확인하는 방법</title>
      <link>https://YooGenie.github.io/post/mysql/20220929/</link>
      <pubDate>Thu, 29 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20220929/</guid>
      <description># 배경 DB에 현재 시간이 들어갈 때 스키마마다 값이 달랐다. A는 현재 서울 시간, B는 UTC 시간이었다. 그래서 각각 타임존을 조회하고 싶었다.
# 문법 select @@global.time_zone, @@session.time_zone; # 결과 시스템 시간으로 되어있었다. 그럼 현재 시간은 몇 시일까? select now(); -- 2022-09-29 09:30:37 로컬 DB라서 컴퓨터 시간과 동일하다.
​ ​ ​</description>
    </item>
    
    <item>
      <title>[MySQL] Error Code: 1093. You can&#39;t specify target table &#39;p&#39; for update in FROM clause 에러메시지 해결 방법</title>
      <link>https://YooGenie.github.io/post/mysql/20220610/</link>
      <pubDate>Fri, 10 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20220610/</guid>
      <description># 배경 SQL문 update할 때 where절에 서브쿼리를 했다. 그런데 에러 메시지가 나타났다.
# 에러메시지 Error Code: 1093. You can&amp;#39;t specify target table &amp;#39;s&amp;#39; for update in FROM clause # 문제의 SQL문 update sell s set s.date=&amp;#39;20220601&amp;#39; where s.id in (select a.id from review r inner join sell a on r.application_id = a.id where r.member_id in (2, 5, 6, 7)); update 할때 테이블를 서브쿼리로 사용하여 문제가 생겼다. # 해결 방안 서브쿼리로 만든 데이터를 임시 테이블을 만들어서 조건을 적었다.</description>
    </item>
    
    <item>
      <title>[MySQL] string를 date 타입으로 변경하는 방법</title>
      <link>https://YooGenie.github.io/post/mysql/20220602/</link>
      <pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20220602/</guid>
      <description># 배경 회사에서 배너를 만드는데 start_date와 end_date를 YYYYMMDDHHmm 12자리 string으로 저장을 했다. 현재 이 배너가 활성화 되어야하는지 체크 하려면 날짜를 봐야했다. 그냥 비교가 되지 않아서 string을 date 타입으로 변경해서 select문을 해야한다는 걸 알았다.
# 문법 STR_TO_DATE( string으로된데이터 , date형식) # 예시 select STR_TO_DATE(&amp;#39;202206022210&amp;#39;, &amp;#39;%Y%m%d%H%i&amp;#39;); select STR_TO_DATE(&amp;#39;202206022210&amp;#39;, &amp;#39;%Y%m%d&amp;#39;); # 결과 2022-06-02 22:10:00 2022-06-02 # Type 형식 표기 예시 %Y%m%d 2022-06-02 %Y%m%d%H%i%s 2022-06-02 22:10:00 %H%i%s 22:10:06 # string과 date 포맷 같아야함 string이 2022-02-08이면 date 포맷도 %Y-%m-%d 이렇게 써야한다.</description>
    </item>
    
    <item>
      <title>[MySQL] 컬럼 안에 있는 문자열을 구분자로 자르기</title>
      <link>https://YooGenie.github.io/post/mysql/20220415/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20220415/</guid>
      <description># 배경 회사에서 동료가 주소를 시,구,군까지 잘라서 카운트를 궁금해 했다. 예를 들어서 서울특별시 강남구 서초동이었다면 구까지 잘라서 해당되는 정보의 카운트를 원한 것이다.
# 문법 SUBSTRING_INDEX(컬럼명, &amp;#39;구분자&amp;#39;, 카운트) # 예시1 select SUBSTRING_INDEX(&amp;#39;서울특별시 성동구 난계로 73 (하왕십리동)&amp;#39;, &amp;#39; &amp;#39;,1) ; -- 서울특별시 select SUBSTRING_INDEX(&amp;#39;서울특별시 성동구 난계로 73 (하왕십리동)&amp;#39;, &amp;#39; &amp;#39;,2) ; -- 서울특별시 성동구 select SUBSTRING_INDEX(&amp;#39;서울특별시 성동구 난계로 73 (하왕십리동)&amp;#39;, &amp;#39; &amp;#39;,3) ; -- 서울특별시 성동구 난계로 select SUBSTRING_INDEX(&amp;#39;서울특별시 성동구 난계로 73 (하왕십리동)&amp;#39;, &amp;#39; &amp;#39;,4) ; -- 서울특별시 성동구 난계로 73 select SUBSTRING_INDEX(&amp;#39;서울특별시 성동구 난계로 73 (하왕십리동)&amp;#39;, &amp;#39; &amp;#39;,5) ; -- 서울특별시 성동구 난계로 73 (하왕십리동) 왼쪽부터 한개씩 정보를 추가해서 알 수 있다.</description>
    </item>
    
    <item>
      <title>[회고] GitHub 잔디 심기 3개월간 회고</title>
      <link>https://YooGenie.github.io/post/retrospective/20220312/</link>
      <pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/retrospective/20220312/</guid>
      <description>2021-12-13 ~2022-03-12 아무 계획도 없이 하루에 한번 잔디를 심어보자는 생각으로 시작했다. 그렇게 3개월이 지났다. 너무 아무 계획없이 했나?
처음엔 입사 초기 공부했던 것을 복습했다. 그 이후 무언가 만들어 보려고 이것 저것 시도 해봤지만 내가 부족한 점만 찾아서 중간에 멈췄다.
부족한 부분을 공부하다가도 중간에 길을 잃은 적이 있다. 그래서 react 기초를 공부하다가 go 공부하고 알고리즘도 하고... 너무 계획없이 공부하는 느낌을 받았다. 그래서 세세한 계획은 짜지 못하지만 월 단위나 주단위로 공부할 것을 계획해보는 것은 어떨까?</description>
    </item>
    
    <item>
      <title>[MySQL] 날짜/시간 형식(포맷) 설정해서 값 찾기</title>
      <link>https://YooGenie.github.io/post/mysql/20211228/</link>
      <pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20211228/</guid>
      <description># 목표 날짜와 시간을 분리하기
# 컬럼안에 있는 값 2021-03-02 10:41:05 # 날짜를 찾는 법 DATE_FORMAT(컬럼명 ,&amp;#39;%Y-%m-%d&amp;#39;) # 예시 select DATE_FORMAT(created_at,&amp;#39;%Y-%m-%d&amp;#39;) from donations; # 결과값 2021-03-02
# 시간 찾는 방법 DATE_FORMAT(컬럼명 ,&amp;#39;%H:%i:%s&amp;#39;) # 예시 select DATE_FORMAT(created_at,&amp;#39;%H:%i:%s&amp;#39;) from donations; # 결과값 10:45:24
​ ​ ​</description>
    </item>
    
    <item>
      <title>1년차 개발자 회고</title>
      <link>https://YooGenie.github.io/post/retrospective/20211227/</link>
      <pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/retrospective/20211227/</guid>
      <description>벌써 입사한지 1년이 되었다. 일년을 뒤돌아보는 시간을 가졌다. (팀이 생긴지 1년 4개월, 프리랜서 개발자와 신입개발자로 돌아가는 팀이다)
# 입사하자마자 고비 처음 팀으로 왔을 때 사수는 우리에게 Clone을 하라고 했다. 나는 무슨 말인지 이해를 못 했고 git이 무엇인지 몰랐다. 옆에 앉은 동기는 git를 아는 것 같았다. 도움을 받을 수 있다는 생각에 다행이라는 생각했다. 우리 팀은 git, go, react를 사용한다고 했는데 나는 그날 세 단어를 처음 들어봤다. 진짜 나는 아무것도 몰랐는데 어떻게 취업이 되었는지 미스터리다.</description>
    </item>
    
    <item>
      <title>[MySQL] json 컬럼안에 있는 특정 값 찾는 방법</title>
      <link>https://YooGenie.github.io/post/mysql/20211222/</link>
      <pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20211222/</guid>
      <description># 목적 json으로 된 컬럼에서 datetime만 뽑아오기
# 컬럼명 created
# json 구조 { &amp;#34;id&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;유지니&amp;#34;, &amp;#34;datetime&amp;#34;: &amp;#34;2021-03-02 10:07:08&amp;#34; } # SQL select JSON_EXTRACT(created,&amp;#39;$.datetime&amp;#39;) 시간 from donations ; JSON_EXTRACT함수를 이용해서 컬럼명과 JSON안에 있는 키를 적으면 끝!
결과 &amp;ldquo;2021-03-02 10:07:08&amp;rdquo;
​ ​ ​</description>
    </item>
    
    <item>
      <title>[golang] JSON에서 원하는 값만 추출해 오기</title>
      <link>https://YooGenie.github.io/post/golang/20211213/</link>
      <pubDate>Mon, 13 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/golang/20211213/</guid>
      <description># 배경 DB에서 Json으로 되어 있는 컬럼에서 원하는 값 추출하고 싶었다.
# DB 컬럼 값 content
{&amp;#34;name&amp;#34;: &amp;#34;유지니&amp;#34;, &amp;#34;id&amp;#34;: 3954, &amp;#34;totalQuantity&amp;#34;: 3, &amp;#34;registrationNo&amp;#34;: &amp;#34;990101-2******&amp;#34;} 코드 type ContentJson struct { Id int64 Content map[string]interface{} } func (contentService) ExtractValue(ctx context.Context, id int64) error { content, err := DonationDocuService().GetIssuedDonationReceipt(ctx, id) //원하는 값을 가져왔다. if err != nil { return err } m := entity.ContentJson{Id: id} _ = json.Unmarshal(content.Content, &amp;amp;m.Content) //바이트를 JSon으로 바꿔준다. dateOfBirth = m.</description>
    </item>
    
    <item>
      <title>[MySQL] 특정 id를 배열로 해서 select문 만들기</title>
      <link>https://YooGenie.github.io/post/mysql/20210821/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/mysql/20210821/</guid>
      <description># 배경 특정 id 몇 개에 대한 정보를 찾아야 하는 상황이었다.
# 문법 select * from 테이블명 where 컬럼 in (1,2.3,4) # 상황 member table에서 vip인 사람의 배송지 주소를 알고 싶다!! 배송지 주소는 delivery table안에 있다 배송지 주소를 조회하고 싶다! 우선 member table에서 vip인 사람부터 찾아보자! select * from member where type=&amp;#39;VIP&amp;#39;; 근데 모든 정보를 알 필요는 없고 delivery_id만 알면 된다.
select delivery_id from member where type=&amp;#39;VIP&amp;#39;; 그러면 VIP인 사람의 delivery_id가 0개 이상이 나올 것이다.</description>
    </item>
    
    <item>
      <title>#9 Stash 임시저장하는 방법</title>
      <link>https://YooGenie.github.io/post/company/20201229/</link>
      <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/company/20201229/</guid>
      <description>stash : 브랜치 전환을 하거나 커밋 변경을 해야할때 임시적으로 저장할 수 있는 명령어 &amp;lt; 마스터에서 모르고 작업한 경우 &amp;gt; 임시저장 임의 이름으로 저장하기 git stash 이름 지정해서 저장하기 방법 : git stash save [명칭] 예시 : git stash save masterbranch stash 기록 확인 git stash list 저장된 stash 불러오기 가장 최근에 저장된 stash를 불러온다 git stash apply 원하는 stash 불러오기 방법 : git stash apply [stash아이디] 예시 : git stash apply stash@{1} 그리고 나서 작업 시작하기 보충 stash 기록이 모두 제거 git stash clear stash를 복원하고 바로 제거 git stash pop 가장 최근에 저장한 stash를 삭제 git stash drop ​ ​ ​</description>
    </item>
    
    <item>
      <title>#8 GitLab Merge Request 생성하기</title>
      <link>https://YooGenie.github.io/post/company/20201228/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/company/20201228/</guid>
      <description>push 성공 주소 클릭 페이지 작성 Assignee는 XXX님으로 설정 Submit merge request 클릭 후 기다리면 됨 ​ ​ ​</description>
    </item>
    
    <item>
      <title>#7 rebase 하는 방법</title>
      <link>https://YooGenie.github.io/post/company/20201227/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/company/20201227/</guid>
      <description>rebase 하는 방법 코드 수정 commit 하고 commit 로그를 하나로 합치기 위해서 Rebase (2가지방법) push 전 commit 로그 두개를 rebase log를 통하여 commit이 두개인 것을 확인 git log commit을 하나로 합치는 작업 진행 git rebase -i HEAD~2 &amp;lt; vi 편집기 사용 &amp;gt; 2-1. [i] 또는 [insert]를 눌러서 편집 시작 2-2. 두개의 pick 중 1개는 pick으로 유지 하나는 s로 변경 2-3. [esc]키를 눌러서 빠져나오기 2-4. 창을 한번 클릭한 뒤 :wq작성하고 빠져나오기 commit 메세지 한개로 수정하기 [DD] 또는 [D + ↓]`를 사용하여 줄 삭제 하나의 메세지(체크된 박스)만 유지 log가 하나로 합쳐진 것을 확인 Pull하고 충돌난다면 push &amp;ndash;force 방법 : git push [별칭] -f [이슈번호] 예시 : git push sunny -f 9 push 후 GitLab에 commit이 두개 인 경우의 rebase log를 통하여 commit이 두개인 것을 확인 git log commit을 하나로 합치는 작업 진행 git rebase -i HEAD~2 &amp;lt; vi 편집기 사용&amp;gt; 2-1) [i] 또는 [insert]를 눌러서 편집 시작 2-2) 두개의 pick 중 1개는 pick으로 유지 하나는 s로 변경 2-3) [esc]키를 눌러서 빠져나오기 2-4) 창을 한번 클릭한 뒤 :wq작성하고 빠져나오기 commit 메세지 한개로 수정하기 [DD] 또는 [D + ↓]를 사용하여 줄 삭제 하나의 메세지(체크된 박스)만 유지 log가 하나로 합쳐진 것을 확인 Pull하고 충돌난다면 [Push 전 Pull한 이후 충돌나면?</description>
    </item>
    
    <item>
      <title>#6 conflict 해결 방법</title>
      <link>https://YooGenie.github.io/post/company/20201226/</link>
      <pubDate>Sat, 26 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/company/20201226/</guid>
      <description>conflict 나는 경우 push 하기전 commit 후 pull 받았을 때 conflict이 난 경우 Merge request한 후에 conflict이 난 경우 수정 중 다른 작성자가 같은 코드를 수정하고 올렸을 경우 다음과 같은 conflict이 발생합니다. 충동 해결 방법 conflict 발생시 다음과 같은 경로로 이동하여 conflict를 해결합니다. TIP : 여러개의 파일이 충돌이 날 수 있기 때문에 최상위 디렉토리에서 다음과 같은 경로로 이동합니다. 2)Merge를 클릭 Accept Yours 로컬에 있는 코드를 받아들이겠다는 뜻입니다. Conflict이 난 상황에서 본인이 수정한 코드를 먼저 받아 들여서 로컬 창에 본인이 수정한 코드만 남게 됩니다.</description>
    </item>
    
    <item>
      <title>#5 Pull과 push</title>
      <link>https://YooGenie.github.io/post/company/20201225/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/company/20201225/</guid>
      <description>#Pull 할 경우 브랜치 만들기 전 master에서 pull 수정 작업 Commit 한 후 Pull git pull upstream master #push 할 때 코드 변경사항(추가되거나 수정 혹은 삭제)을 commit 현재상태확인하기 git status commit 내역 추가 git add . 저장하기 방법 : git commit -m &amp;#34;#브랜치번호 이슈제목&amp;#34; 예시 : git commit -m &amp;#34;#9 코드리뷰 후 수정&amp;#34; pull 하기 git pull upstream master 만약 충돌이 난다면 Conflict 해결방법 참고
3)push 저장소 이름 / 이슈번호</description>
    </item>
    
    <item>
      <title>#4 branch 만드는 방법</title>
      <link>https://YooGenie.github.io/post/company/20201224/</link>
      <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/company/20201224/</guid>
      <description># 이슈생성방법 1) 두레이 작성법 개발스프린트 글에서 유저스토리 맡은 부분을 클릭 → 왼쪽 상단 &amp;hellip; 클릭 → 하위업무추가 → 신규 담당자: 본인이름 제목: 누구나 제목만 보고 업무를 파악할 수 있게 적는다. 내용: # 작업목표 (체크박스 이용해서 쓰기) 2) GitLab에서 Issues 생성 업무해당되는 레파지토리 이동 → 왼쪽 바 Issues 클릭 → new issue 클릭 → 작성후 Submit issue → 브랜치가 생성 → 이주소를 두레이에 작성 new issue 작성법 - GitLab에서 Title: 두레이 제목과 똑같이 Description: 두레이 업무 URL 쓰기 Assignee: 본인선택 # Branch 생성 master에서 pull 받은 뒤에 진행 전체 브랜치 내역 확인 git branch 새로운 브랜치를 생성, 해당 브랜치로 이동 동시 수행 git checkout -b 브랜치이름(=이슈번호) 해당 브랜치로 이동 git checkout 브랜치이름 해당 브랜치가 삭제 git branch -d 브랜치이름 ​ ​ ​</description>
    </item>
    
    <item>
      <title>#3 공용 저장소를 개인 저장소로 옮기기</title>
      <link>https://YooGenie.github.io/post/company/20201223/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/company/20201223/</guid>
      <description>#gitLab 사진 # clone 하는 방법(2가지) 1. git bash에서 작성 작업 폴더로 이동하여 오른쪽 마우스를 클릭하여 &amp;lsquo;git bash here&amp;rsquo;로 들어간다 또 git bash 접속해서 cd를 통하여 디렉터리를 찾아서 접속한다. cd GitTest mkdir 폴더명 디렉터리 하나를 만든다. 공용 GitLab 저장소에서 clone 버튼 클릭해서 SSH주소를 복사한다. Clone git clone [SSH주소] 2. Goland에서 작업 open클릭-Users/bist/새폴더 하나 만들어서 선택-OK클릭 clone 명령어 쓰기 git clone [SSH주소] 폴더명 작성 후 폴더 안으로 이동하기 cd sample-git # 원격 저장소 설정(GoLand에 작업!</description>
    </item>
    
    <item>
      <title>#2 javaScript에서 패키지 관리자 툴 설치</title>
      <link>https://YooGenie.github.io/post/company/20201222/</link>
      <pubDate>Tue, 22 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/company/20201222/</guid>
      <description># javaScript에서 모듈을 설치 할 수 있는 패키지 관리자 툴 npm node packged Manager의 약자로 Node.js에서 주로 사용했던 패키지 관리자 툴 이 패키지는 온라인 데이터베이스로 이루어져 있습니다. yarn 페이스북에서 npm을 보완하고 속도를 빠르게 한 패키지 매니저 툴 시작하는 방법 node.js 다운받기 git bash에서 버전 체크 node -v git bash에서 yarn 설치(한번만 하면됨) npm install -g yarn GoLand에서 모듈을 그대로 설치 yarn install GoLand에서 yarn 버전체크 yarn -v 프로젝트 시작(local에서 웹 접속) yarn start ​ ​ ​</description>
    </item>
    
    <item>
      <title>#1 초기 로컬 개발 환경 구성</title>
      <link>https://YooGenie.github.io/post/company/20201221/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://YooGenie.github.io/post/company/20201221/</guid>
      <description>1. Go 언어를 설치 2. GoLand설치 =&gt; 30일 무료 체험으로 설치하세요 3. MySQL + MySQL Workbench 설치
4. Git Bash 설치 5. 환경변수 설정하기 6. SHH 키 찾아서 git에 작성 SSH 키 찾아서 GitLab에 작성하는 방법 git bash 열어서 ssh 이동을 한다 cd ~/.ssh 폴더 안에 내용을 체크한다 ls 키를 알 수 있다 cat id\_rsa.pub 키를 복사해서 GitLab에서 오른쪽 상단 원 옆에 화살표를 눌러 settings 클릭한다. 왼쪽 바에 SSH keys을 클릭해서 key부분에 작성한다.</description>
    </item>
    
  </channel>
</rss>
